spring.datasource.url=jdbc:mysql://${db_ip:172.16.0.63}:${db_port:3306}/${db_name:metagrid2.1.5}?useUnicode=true&characterEncoding=utf-8
spring.datasource.username=${db_user:root}
spring.datasource.password=${db_pwd:root}
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.max-idle=${max_idle:10}
spring.datasource.max-wait=${max_wait:60000}
spring.datasource.min-idle=${min_idle:5}
spring.datasource.initial-size=${initial_size:5}
spring.datasource.max-active=${max_active:100}
spring.datasource.validation-query=SELECT 1
spring.datasource.test-on-borrow=${test_on_borrow:true}
spring.datasource.test-while-idle=${test_while_idle:true}
spring.datasource.test-on-return=${test_on_return:true}
spring.datasource.time-between-eviction-runs-millis=300000
spring.datasource.min-evictable-idle-time-millis=1800000
spring.application.name=${application_name:HUBBLE-DQ}
server.port=${port:16111}
server.tomcat.basedir=/opt/server/dataquality/apps

eureka.client.serviceUrl.defaultZone=${eureka_url:http://172.16.0.6:18087/eureka/}
eureka.instance.prefer-ip-address=true
spring.jpa.show-sql=false

metagrid.server.name=${metagrid_api_application_name:hubble-mg-api}
metagrid.find.dataset.request=/hubble/metagrid/v2/api/structuredData/struct
metagrid.find.dataset.by.id=/hubble/metagrid/v2/api/structuredData/{dataSetID}/jdbc
feign.hystrix.enabled=true
hystrix.command.default.execution.timeout.enabled=false
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=20000

run.mode=${running_mode:cluster}

#hubble-zone
zone.service.name=${zone_application_name:hubble-mg-api}
zone.find.by.id=/hubble/metagrid/zones/{id}

#hdfs配置
hdfs.namenode.ip=${hdfs_namenode_ip:172.16.50.21}
hdfs.namenode.port=${hdfs_namenode_port:8020}
hdfs.username=${hadoop_user_name:hdfs}
hdfs.url=hdfs://${hdfs.namenode.ip}:${hdfs.namenode.port}

#yarn
yarn.rm.ip=${yarn_rm_ip:172.16.50.21}
yarn.rm.port=${yarn_rm_port:8088}

#提交spark作业配置
spark.master=${spark_master:yarn}
spark.standalone.url=${spark_standalone_url:spark://172.16.50.21:7077}
spark.deploy.mode=${spark_deploy_mode:cluster}
spark.local.thread=${spark_local_thread:*}
spark.local.logs.dir=/opt/server/metagrid/dataquality/spark/logs/
spark.job.jar.dir=${spark_jar_idr:/user/chinacloud/dataquality/}
spark.hadoop.conf.dir=/opt/server/metagrid/dataquality/spark/hive_conf
spark.java.home=${java_home:/usr/lib/java/jdk1.8.0_121}
spark.home=/opt/server/metagrid/dataquality/spark/spark-2.1.0-bin-hadoop2.6
spark.executor.instances=3
spark.executor.memory=2G
spark.executor.cores=3
spark.driver.memory=2G
spark.local.obtain.interval=10


#定时从yarn上获取spark作业状态
spark.job.schedule=${spark_job_schedule:0 0/1 * * * ?}
#提交超时时间， 单位分钟
spark.job.submit.timeout=2
#spark作业存放输出结果信息表
spark.job.output.url=jdbc:mysql://${db_ip:172.16.0.63}:${db_port:3306}/${db_name:metagrid2.1.5}
spark.job.output.table=${job_output_table:dataquality_job}
spark.job.output.username=${db_user:root}
spark.job.output.password=${db_pwd:root}
#数据质量job 合并的粒度, -1表示能合并就合并
job.merge.size=${job_merge_size:30}


#文件上传路径
data.file.upload.path=/opt/server/upload
spring.http.multipart.maxFileSize=200Mb
spring.http.multipart.maxRequestSize=200Mb

#报告评分周期
report.score.compute.schedule=${report_score_compute_schedule:0 1 0 * * ?}

usertenant.service=one-infrastructure-api
zone.datazone.service=HUBBLE-MG-API
super.tenant=${super_tenant:512032de-e220-45ba-bd23-1f15cd3c0f88}
super.tenant.check=${super_tenant_check:true}
user.tenants.url=/api/v1/users/{userId}/tenants

open.apis[0]=/health
open.apis[1]=/info
open.apis[2]=/reports/*/date
open.apis[3]=/reports/*/results
open.apis[4]=/swagger-ui.html
open.apis[5]=/webjars/**
open.apis[6]=/swagger-resources/**
open.apis[7]=/v2/api-docs
open.apis[8]=/v2/reports/*/history
open.apis[9]=/v2/reports/*/detail


datasetAndZone.validate.apis[0]=/reports/

# rabbit
spring.rabbitmq.addresses=${rabbitmq_addresses:172.16.0.6:5672}
spring.rabbitmq.host=${rabbitmq_ip:172.16.0.6}
spring.rabbitmq.port=${rabbitmq_port:5672}
spring.rabbitmq.username=${rabbitmq_user:fast}
spring.rabbitmq.password=${rabbitmq_password:fast}
spring.rabbitmq.virtual-host=${rabbitmq_virtual_host:/}
spring.rabbitmq.listener.simple.acknowledge-mode=auto
spring.rabbitmq.listener.simple.concurrency=3
spring.rabbitmq.listener.simple.max-concurrency=3
spring.rabbitmq.template.retry.enabled=true
spring.rabbitmq.template.mandatory=true

# 开启发送失败退回
spring.rabbitmq.publisher-returns=true
# 开启发送确认
spring.rabbitmq.publisher-confirms=true

swagger:
enabled: true
title: hubble-dataquality
description: 数据质量API文档
version: V3.0
base-package: com.cetc.hubble
base-path: /**
