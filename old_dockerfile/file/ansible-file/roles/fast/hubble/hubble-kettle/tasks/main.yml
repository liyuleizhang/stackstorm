---

- name: create hubble-kettledirectory
  file: path=/opt/chinacloud/hubble-kettle state=directory mode=0755

- name:  stop hubble-kettle
  shell: cd /opt/chinacloud/hubble-kettle   && docker-compose -f ./docker-compose.yml  down
  ignore_errors: yes

- name: backup old hubble-kettle version
  shell: tar -cf /opt/chinacloud/hubble-kettle-{{ ansible_date_time.date}}.tar.gz /opt/chinacloud/hubble-kettle && rm -rf  /opt/chinacloud/hubble-kettle/*

- name: copy hubble-kettlefile to /opt/chinacloud
  copy: src=./ dest=/opt/chinacloud/hubble-kettle/  mode=0755

# 生成global.env
- name: generate global.env
  template:
    src: global.env.j2
    dest: /opt/chinacloud/hubble-kettle/global.env

# 生成docker-compose.yml
- name: generate docker-compose.yml
  template:
    src: docker-compose.yml.j2
    dest: /opt/chinacloud/hubble-kettle/docker-compose.yml

# 生成mysql-router.env
- name: generate mysql-router.env
  template:
    src: mysql-router.env.j2
    dest: /opt/chinacloud/hubble-kettle/mysql-router.env
  when: ONEX_VIP is defined and ONEX_VIP != ''

# 生成fast.config
- name: generate fast.config
  template:
    src: fast.config.j2
    dest: /opt/chinacloud/hubble-kettle/fast.config

- name: copy shell to /tmp
  copy: src=init-ip.sh dest=/tmp/init-ip.sh   mode=0755

- name: set variables
  set_fact:
    ONEX_IP: "{% if ONEX_VIP is defined and ONEX_VIP != '' %}{{ ONEX_VIP }}{% else %}{{ hostvars[groups['onex_servers'][0]]['ansible_host'] }} {% endif %}"
    MYSQL_IP: "{% if db_ip %}{{ db_ip }}{% elif ONEX_VIP is defined and ONEX_VIP != '' %}{{ ansible_default_ipv4.address }}{% else %}{{ hostvars[groups['mysql'][0]]['ansible_host'] }}{% endif %}"
    MYSQL_PASSWORD: "{% if db_passwd %}{{ db_passwd }}{% else %}chinacloudroot{% endif %}"
    MYSQL_PORT: "{% if db_port %}{{ db_port }}{% elif ONEX_VIP is defined and ONEX_VIP != '' %}6452{% else %}3306{% endif %}"
    ZOOKEEPER_ADDRESS: "{% for host in groups['zookeeper_servers'] -%} {{ hostvars[host]['ansible_host'] }}:{%- if zookeeper_port -%}{{ zookeeper_port }}{%- else -%}2181{%- endif -%}{%- if loop.nextitem is defined -%},{%- endif -%} {%- endfor %}"

- name: replace hubble_standalone ip
  shell: /tmp/init-ip.sh  /opt/chinacloud/hubble-kettle/  {HUBBLE_STANDALONE_IP}  {{ hostvars[groups['hb_standalone'][0]]['ansible_host'] }}

- name: replace onex_ip ip
  shell: /tmp/init-ip.sh  /opt/chinacloud/hubble-kettle/  {ONEX_IP}  {{ ONEX_IP }}

- name: replace db ip
  shell: /tmp/init-ip.sh  /opt/chinacloud/hubble-kettle/  {MYSQL_DESTINATION_IP}  {{ MYSQL_IP }}

# application.yml里用到了数据库端口
- name: replace db port
  shell: /tmp/init-ip.sh  /opt/chinacloud/hubble-kettle/  {MYSQL_DESTINATION_PORT}  {{ MYSQL_PORT }}

- name: replace zookeerper address
  shell: /tmp/init-ip.sh  /opt/chinacloud/hubble-kettle/  {ZOOKEEPER_ADDRESS}  {{ ZOOKEEPER_ADDRESS }}

- name: chmod 777
  shell: chmod -R 777 /opt/chinacloud/hubble-kettle/

- name:  pull hubble-kettle images
  shell: cd /opt/chinacloud/hubble-kettle && docker-compose  -f ./docker-compose.yml pull

- name:  start hubble-kettle
  shell: cd /opt/chinacloud/hubble-kettle  && docker-compose -f ./docker-compose.yml  up -d

# TODO: 添加tasktracker health check
- name: Wait kettle come alive
  action: shell docker-compose -f /opt/chinacloud/hubble-kettle/docker-compose.yml ps | grep "(healthy)" | wc -l
  register: result
  until: result.stdout.find("1") != -1
  retries: 20
  delay: 10
