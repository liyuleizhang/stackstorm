---

# 安装mysql 客户端
- name: Install mariadb
  yum: name=mariadb update_cache=yes state=installed use_backend=yum

- name: copy owner docker binary
  copy: src=docker/ dest=/usr/bin/  mode=0755 backup=yes

- name: create  onex  directory
  file: path=/opt/chinacloud/onex state=directory mode=0755

- name: create onex data directory
  file: path=/opt/chinacloud/onex-data state=directory mode=0755

- name:  stop onex
  shell: cd /opt/chinacloud/onex   && docker-compose -f ./docker-compose.yml  down
  ignore_errors: yes

- name: backup old onex version
  shell: tar -cf /opt/chinacloud/onex-{{ ansible_date_time.date}}.tar.gz /opt/chinacloud/onex && rm -rf  /opt/chinacloud/onex/*

- name: copy onex file to /opt/chinacloud/onex
  copy: src=onex-{{ONEX_VERSION}}/ dest=/opt/chinacloud/onex/  mode=0755

- name: copy shell to /tmp
  copy: src=init-ip.sh dest=/tmp/init-ip.sh   mode=0755

# 生成fast.config
- name: generate fast.config
  template:
    src: fast.config.j2
    dest: /opt/chinacloud/onex/fast.config

# 生成one-registry.env
- name: generate one-registry.env
  template:
    src: one-registry.env.j2
    dest: /opt/chinacloud/onex/one-registry.env

# 生成one-config.env
- name: generate one-config.env
  template:
    src: one-config.env.j2
    dest: /opt/chinacloud/onex/one-config.env

# 生成fast-with-logback.config
- name: generate fast-with-logback.config
  template:
    src: fast-with-logback.config.j2
    dest: /opt/chinacloud/onex/fast-with-logback.config

# 生成mysql-router.env
- name: generate mysql-router.env
  template:
    src: mysql-router.env.j2
    dest: /opt/chinacloud/onex/mysql-router.env
  when: ONEX_VIP is defined and ONEX_VIP != ''

# 生成portal.conf
- name: generate portal.conf
  template:
    src: portal.conf.j2
    dest: /opt/chinacloud/onex/portal.conf

# 生成portal.conf
- name: generate portal.conf
  template:
    src: keycloak.env.j2
    dest: /opt/chinacloud/onex/keycloak.env

# 生成单节点docker-compose.yml
- name: generate docker-compose.yml
  template:
    src: docker-compose.yml.j2
    dest: /opt/chinacloud/onex/docker-compose.yml
  when: ONEX_VIP is not defined or ONEX_VIP == ''

# 生成HA docker-compose.yml
- name: generate docker-compose.yml
  template:
    src: docker-compose.yml.ha.j2
    dest: /opt/chinacloud/onex/docker-compose.yml
  when: ONEX_VIP is defined and ONEX_VIP != ''

- name: set variables
  set_fact:
    ONEX_IP: "{% if ONEX_VIP is defined and ONEX_VIP != '' %} {{ ONEX_VIP }} {% else %} {{ hostvars[groups['onex_servers'][0]]['ansible_host'] }} {% endif %}"
    MYSQL_IP: "{% if db_ip %}{{ db_ip }}{% elif ONEX_VIP is defined and ONEX_VIP != '' %}{{ ansible_default_ipv4.address }}{% else %}{{ hostvars[groups['mysql'][0]]['ansible_host'] }}{% endif %}"
    MYSQL_PASSWORD: "{% if db_passwd %}{{ db_passwd }}{% else %}chinacloudroot{% endif %}"
    MYSQL_PORT: "{% if db_port %}{{ db_port }}{% elif ONEX_VIP is defined and ONEX_VIP != '' %}6446{% else %}3306{% endif %}"
    RABBITMQ_ADDRESS: "{% for host in groups['rabbitmq_servers'] -%} {{ hostvars[host]['ansible_host'] }}:{%- if rabbitmq_port -%}{{ rabbitmq_port }}{%- else -%}5672{%- endif -%}{%- if loop.nextitem is defined -%},{%- endif -%} {%- endfor %}"
    ZOOKEEPER_ADDRESS: "{% for host in groups['zookeeper_servers'] -%} {{ hostvars[host]['ansible_host'] }}:{%- if zookeeper_port -%}{{ zookeeper_port }}{%- else -%}2181{%- endif -%}{%- if loop.nextitem is defined -%},{%- endif -%} {%- endfor %}"
    HUBBLE_MYSQL_IP: "{% if db_ip %}{{ db_ip }}{% elif ONEX_VIP is defined and ONEX_VIP != '' %}127.0.0.1{% else %}{{ hostvars[groups['mysql'][0]]['ansible_host'] }}{% endif %}"
    HUBBLE_MYSQL_PORT: "{% if db_port %}{{ db_port }}{% elif ONEX_VIP is defined and ONEX_VIP != '' %}6452{% else %}3306{% endif %}"

- name: replace hubble mysql ip
  shell: /tmp/init-ip.sh  /opt/chinacloud/onex/  {HUBBLE_MYSQL_IP}  {{ HUBBLE_MYSQL_IP }}

- name: replace hubble mysql port
  shell: /tmp/init-ip.sh  /opt/chinacloud/onex/  {HUBBLE_MYSQL_PORT}  {{ HUBBLE_MYSQL_PORT }}

- name: replace db ip
  shell: /tmp/init-ip.sh  /opt/chinacloud/onex/  {MYSQL_DESTINATION_IP}  {{ MYSQL_IP }}

- name: replace db password
  shell: /tmp/init-ip.sh  /opt/chinacloud/onex/  {MYSQL_PASSWORD}  {{ MYSQL_PASSWORD }}

# application.yml里用到了数据库端口
- name: replace db port
  shell: /tmp/init-ip.sh  /opt/chinacloud/onex/  {MYSQL_DESTINATION_PORT} {{ MYSQL_PORT }}

- name: replace rabbitmq address
  loop: "{{groups['rabbitmq_servers']}}"
  shell: /tmp/init-ip.sh /opt/chinacloud/onex/ {RABBITMQ_ADDRESS} {{ RABBITMQ_ADDRESS }}

- name: replace zookeerper address
  shell: /tmp/init-ip.sh  /opt/chinacloud/onex/  {ZOOKEEPER_ADDRESS} {{ ZOOKEEPER_ADDRESS }}

- name: replace onex basic ip
  shell: /tmp/init-ip.sh  /opt/chinacloud/onex/  {ONEX_IP} {{ ONEX_IP }}

- name: replace onex group
  shell: /tmp/init-ip.sh  /opt/chinacloud/onex/  {ONEX_IMAGE_GROUP}  {{ ONEX_IMAGE_GROUP }}

- name: replace onex tag
  shell: /tmp/init-ip.sh  /opt/chinacloud/onex/  {ONEX_IMAGE_VERSION}  {{ ONEX_IMAGE_VERSION }}

- name: replace onex image tag
  shell: /tmp/init-ip.sh  /opt/chinacloud/onex/  {ONEX_CONFIG_IMAGE_VERSION}  {{ ONEX_CONFIG_IMAGE_VERSION }}
  ignore_errors: yes

# TODO 监控相关后续要做
- name: replace monitor origin tag
  shell: /tmp/init-ip.sh  /opt/chinacloud/onex/  {MONITOR_ORIGIN}  {{ hostvars[groups['monitoring-master'][0]]['ansible_host']  }}
  ignore_errors: yes

# wso2 相关地址
- name: replace wso2_service_broker url
  shell: /tmp/init-ip.sh  /opt/chinacloud/onex/  {WSO2_SERVICE_BROKER_URL}  {{ wso2_service_broker_url }}

- name: replace wso2 gateway url
  shell: /tmp/init-ip.sh  /opt/chinacloud/onex/  {WSO2_GATEWAY_URL}  {{ wso2_gateway_url }}

- name: replace wso2_am_url
  shell: /tmp/init-ip.sh  /opt/chinacloud/onex/  {WSO2_AM_URL}  {{ wso2_am_url }}

- name: replace wso2_am_publisher_url
  shell: /tmp/init-ip.sh  /opt/chinacloud/onex/  {WSO2_AM_PUBLISHER_URL}  {{ wso2_am_publisher_url }}

- name: replace wos2_am_store_url
  shell: /tmp/init-ip.sh  /opt/chinacloud/onex/  {WSO2_AM_STORE_URL}  {{ wos2_am_store_url }}

- name: replace HDFS_NAMENODE_IP
  shell: /tmp/init-ip.sh  /opt/chinacloud/onex/  {HDFS_NAMENODE_IP}   {{ hdfs_namenode_ip }}
  ignore_errors: yes

- name: replace HDFS_NAMENODE_PORT
  shell: /tmp/init-ip.sh  /opt/chinacloud/onex/  {HDFS_NAMENODE_PORT}   {{ hdfs_namenode_port }}
  ignore_errors: yes

- name: replace WSO2_QUERY_KEY key
  shell:  /tmp/init-ip.sh  /opt/chinacloud/onex/  {WSO2_QUERY_KEY}   {{wso2_query_key}}

- name: replace WSO2_OPERATE_KEY key
  shell: /tmp/init-ip.sh  /opt/chinacloud/onex/  {WSO2_OPERATE_KEY}   {{wso2_operate_key}}

- name: replace WSO2_PUBLISHER_KEY key
  shell: /tmp/init-ip.sh  /opt/chinacloud/onex/  {WSO2_PUBLISHER_KEY}   {{wso2_publisher_key}}

- name: replace WSO2_SUBSCRIBTION_KEY key
  shell: /tmp/init-ip.sh  /opt/chinacloud/onex/  {WSO2_SUBSCRIBTION_KEY}   {{wso2_subscribtion_key}}

- name: replace WSO2_TIRE_QUERY_KEY key
  shell: /tmp/init-ip.sh  /opt/chinacloud/onex/  {WSO2_TIREQUERY_KEY}   {{wso2_tirequery_key}}

- name: replace WSO2_SUBSCRIPTION_BLOCK_KEY key
  shell: /tmp/init-ip.sh  /opt/chinacloud/onex/  {WSO2_SUBSCRIPTION_BLOCK_KEY}   {{wso2_subscription_block_key}}

- name:  pull onex images
  shell: cd /opt/chinacloud/onex && docker-compose  -f ./docker-compose.yml pull

- name:  start onex
  shell: cd /opt/chinacloud/onex && docker-compose -f ./docker-compose.yml  up -d

- name: check onex started
  wait_for: port=8081 state=started delay=60 timeout=600

- name: Wait onex come alive
  action: shell docker-compose -f /opt/chinacloud/onex/docker-compose.yml ps | grep "(healthy)" | wc -l
  register: result
  until: result.stdout.find( '10' if ONEX_VIP is defined and ONEX_VIP != '' else '9') != -1
  retries: 20
  delay: 10

- name:  find init db file
  shell: find  /opt/chinacloud/onex/initdb/ -type f
  register: init_db_result
  ignore_errors: yes

- name:  initdb
  shell: mysql --default-character-set=utf8 -h{{ MYSQL_IP }} -P{{ MYSQL_PORT }} {% if MYSQL_PASSWORD %}-p{{ MYSQL_PASSWORD }}{% endif %}   < {{ item }}
  with_items: "{{init_db_result.stdout_lines}}"
  run_once: true
  ignore_errors: yes

- name:  prepare preseted directory
  shell: mkdir -p /opt/chinacloud/onex-data/files/preset
  ignore_errors: yes
